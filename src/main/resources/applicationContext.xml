<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    
    <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>
					classpath:application.properties
				</value>
			</list>
		</property>
	</bean>

    <!-- oracle 配置 -->
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
		destroy-method="close"> <property name="driverClass" value="${jdbc.driverClassName}" 
		/> <property name="jdbcUrl" value="${jdbc.url}" /> <property name="user" 
		value="${jdbc.username}" /> <property name="password" value="${jdbc.password}" 
		/> <property name="minPoolSize" value="3" /> <property name="maxPoolSize" 
		value="3" /> <property name="maxIdleTime" value="1" /> <property name="acquireIncrement" 
		value="5" /> <property name="maxStatements" value="0" /> <property name="initialPoolSize" 
		value="3" /> <property name="idleConnectionTestPeriod" value="1" /> </bean> -->
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"> 
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--连接池中保留的最大连接数。默认值: 15 -->   
		<property name="maxPoolSize" value="20"/>  
		<!-- 连接池中保留的最小连接数，默认为：3-->  
		<property name="minPoolSize" value="2"/>  
		<!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->  
		<property name="initialPoolSize" value="2"/>  
		<!--最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->   
		<property name="maxIdleTime" value="60" />  
		<!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0 -->   
		<property name="checkoutTimeout" value="10000"/>  
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->   
		<property name="acquireIncrement" value="2"/>  
		<!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次-->   
		<property name="acquireRetryAttempts" value="0"/>  
		<!--重新尝试的时间间隔，默认为：1000毫秒-->   
		<property name="acquireRetryDelay" value="1000" />  
		<!--关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 -->   
		<property name="autoCommitOnClose" value="false" />  
		<!--如果为false，则获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常，但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认: false-->   
		<property name="breakAfterAcquireFailure" value="false" />  
		<!--每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 -->   
		<property name="idleConnectionTestPeriod" value="60" />  
	</bean>
	
	<!--配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
    <!--下面是配置声明式事务管理 -->
	<!--配置哪些方法,什么情况下需要回滚 -->
	<tx:advice id="serviceAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!--当代理的service层中的方法抛出异常的时候才回滚,必须加rollback-for参数 -->
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Throwable" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Throwable" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Throwable" />
			<!--除了上面标识的方法,其他方法全是只读方法 -->
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置哪些类的方法需要进行事务管理 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="servicePointcut" expression="execution(* com.takshine.wxcrm.service.*.*(..))" />
		<aop:advisor pointcut-ref="servicePointcut" advice-ref="serviceAdvice" />
	</aop:config>
	
	<!-- mybatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
	   <property name="dataSource" ref="dataSource" />  
	   <property name="configLocation" value="classpath:mybatis-config.xml"/>      
	</bean> 
	
</beans> 